export declare const providerFunctions = "\n  function _getData(providerProps, parameters, cb) {\n    return window.oc.getData(\n      {\n        name: providerProps._componentName,\n        version: providerProps._componentVersion,\n        baseUrl: providerProps._baseUrl,\n        parameters\n      },\n      (err, data) => {\n        if (err) {\n          return cb(err);\n        }\n        const { _staticPath, _baseUrl, _componentName, _componentVersion, ...rest } =\n          data.component.props;\n        cb(null, rest, data.component.props);\n      }\n    );\n  }\n  \n  function _getSetting(providerProps, setting) {\n    const settingHash = {\n      name: providerProps._componentName,\n      version: providerProps._componentVersion,\n      baseUrl: providerProps._baseUrl,\n      staticPath: providerProps._staticPath\n    };\n    return settingHash[setting];\n  }\n  \n  const getData = (parameters, cb) => {\n    if (!cb || typeof cb !== 'function') {\n      return new Promise((resolve, reject) => {\n        _getData(props, parameters, (err, data) => {\n          if (err) {\n            return reject(err);\n          }\n          resolve(data);\n        });\n      });\n    }\n    _getData(props, parameters, cb);\n  };\n  const getSetting = (setting) => _getSetting(props, setting);\n  ";
